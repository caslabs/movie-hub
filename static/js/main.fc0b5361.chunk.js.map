{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Modal","setAppElement","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDelete","e","console","log","target","value","setState","idnum","handlePostTitle","movTitle","handlePostYear","movYear","handlePostGenre","movGenre","handlePostPicture","handleClick","changePodcast","title","changeReleases","changeChart","state","sidebarOpen","movies","redirect","show","placement","modalIsOpen","movPicture","onSetSidebarOpen","bind","assertThisInitialized","handleDelBut","handlePostBut","openModal","afterOpenModal","closeModal","axios","post","movie_title","movie_year_released","movie_genre","movie_picture","then","response","catch","error","delete","data","movie_id","subtitle","style","color","open","_this2","document","get","res","message","rows","_this3","_this$state","react_default","a","createElement","className","react_sidebar_esm","sidebar","id","onSubmit","handleSubmit","type","name","onChange","ref","handleChange","onClick","onSetOpen","styles","background","map","movie","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc0b5361.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Sidebar from \"react-sidebar\";\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios';\nimport './test.js'\nimport Modal from 'react-modal';\n\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\n\n\n\nModal.setAppElement('#root')\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpen: false,\n      title: \"\",\n      movies: [],\n      redirect: false,\n      show:false,\n      placement:null,\n      modalIsOpen: false,\n      idnum : '',\n\n      movTitle: '',\n      movYear: '',\n      movGenre: '',\n      movPicture: ''\n    };\n\n\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDelBut = this.handleDelBut.bind(this);\n    this.handlePostBut = this.handlePostBut.bind(this);\n\n    this.handlePostTitle = this.handlePostTitle.bind(this);\n    this.handlePostYear = this.handlePostYear.bind(this);\n    this.handlePostGenre = this.handlePostGenre.bind(this);\n    this.handlePostPicture = this.handlePostPicture.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n  }\n\n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n\n\n  handleDelete = (e) => {\n    console.log(e.target.value);\n    this.setState({idnum: e.target.value});\n  }\n\n\n  handlePostTitle = (e) => {\n    console.log(e.target.value);\n    this.setState({movTitle: e.target.value});\n  }\n\n\n  handlePostYear = (e) => {\n    this.setState({movYear: e.target.value});\n  }\n\n  handlePostGenre = (e) => {\n    this.setState({movGenre: e.target.value});\n  }\n\n  handlePostPicture = (e) => {\n    this.setState({movGenre: e.target.value});\n  }\n\n\nhandlePostBut() {\n  axios.post('https://bewc7jy4y8.execute-api.us-west-2.amazonaws.com/dev/JarJerLar2', {\n    movie_title: 'Runscape',\n    movie_year_released: 2019,\n    movie_genre: 'RPG',\n    movie_picture: 'some link'\n  })\n\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\n  handleDelBut() {\n    console.log('Your input value is: ' + this.state.idnum)\n    axios.delete('https://bewc7jy4y8.execute-api.us-west-2.amazonaws.com/dev/JarJerLar3', {\n      data: {\n          movie_id: this.state.idnum\n      } \n  \n  })\n  .then(function (response) {\n    console.log(response);\n    //getList()\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n\n\n  handleClick = (e) => {\n    console.log('this is');\n    console.log(e.target.value);\n    \n  }\n\n\n changePodcast = () => {\n  this.setState({ title: \"Edit\" });\n};\n\nchangeReleases = () => {\n  this.setState({ title: \"Delete\" });\n};\n\nchangeChart = () => {\n  this.setState({ title: \"Delete\" });\n};\n\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n\n  componentDidMount(){\n    document.title = \"Movie Hub\"\n    axios.get(`https://bewc7jy4y8.execute-api.us-west-2.amazonaws.com/dev/JarJerLar`)\n    .then(res => {\n      const movies = res.data.message.rows;\n      this.setState({ movies });\n    })\n  }\n  render() {\n    const { show, placement } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Sidebar\n        sidebar={\n          <div id=\"test\">\n            <b> Edit Form</b>\n          <form onSubmit={this.handleSubmit}>\n          <label>\n              Id Target:\n              <input  type=\"text\" name=\"name\" onChange={(e) => this.handlePostTitle} />\n            </label>\n            <br></br>\n            <label>\n              Title:\n              <input  type=\"text\" name=\"name\" onChange={(e) => this.handlePostTitle} />\n            </label>\n              <br></br>\n              Year:\n              <input type=\"text\" name=\"name\" onChange={(e) => this.handlePostYear} />\n\n              <br></br>\n              Genre:\n              <input type=\"text\" name=\"name\" onChange={(e) => this.handlePostGenre} />\n\n              <br></br>\n              Picture:\n              <input type=\"text\" name=\"name\" onChange={(e) => this.handlePostPicture} />\n              <br></br>\n            <button type=\"submit\">Edit Movie</button>\n          </form>\n          <b>Post Form</b>\n          <label>\n              Title:\n              <input ref=\"title\" type=\"text\" name=\"name\" onChange={this.handleChange} />\n          </label>\n\n          <label>\n              Year:\n              <input type=\"text\" name=\"name\" onChange={this.handleChange} />\n          </label>\n\n          <label>\n              Genre:\n              <input type=\"text\" name=\"name\" onChange={this.handleChange} />\n          </label>\n\n\n          <label>\n              Picture:\n              <input type=\"text\" name=\"name\" onChange={this.handleChange} />\n          </label>\n          <button onClick={this.handlePostBut}>Post</button>\n          <b>Delete Form</b>\n          Id Number:\n          <label>\n          <input type=\"text\" name=\"name\" onChange={this.handleDelete} />\n          </label>\n          <button onClick={this.handleDelBut}>Delete</button>\n        </div>\n        }\n        open={this.state.sidebarOpen}\n        onSetOpen={this.onSetSidebarOpen}\n        styles={{ sidebar: { background: \"white\" } }}\n      >\n          <div id=\"oof\">\n          <button id=\"sideController\" onClick={() => this.onSetSidebarOpen(true)}>\n          Movies\n        </button>\n        \n\n          </div>\n      </Sidebar>\n      <div id=\"container\">\n\n\n\n\n\n\n      \n        <div>{this.state.title}</div>\n        { this.state.movies.map(movie => \n        <div id=\"box\"> \n        <h1>{movie.movie_id}</h1>\n        <h1>{movie.movie_title}</h1>\n        <h3>{movie.movie_genre}</h3>\n        <h2>{movie.movie_year_released} </h2>\n        <img id=\"movid\" src={movie.movie_picture} />\n        </div>)}\n        </div>\n        </header>\n      </div>\n\n\n\n    );\n  }\n}\n\n/*\n\n\n\n\n*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}